#include<reg51.h>
#include <stdio.h>
#include <string.h>

#define lcd_data P1
 
sbit rs=P2^0;
sbit rw=P2^1;
sbit en=P2^2;
 
void lcd_init();
void cmd(unsigned char a);
void dat(unsigned char b);
void show(unsigned char *s);
void lcd_delay();
void delay1(unsigned int time);
unsigned char rx();
char time[5];
char namegps[7], name1gps[7] = "GPRMC,",gpsdat[63];
char msggps , checkgps;
int h;
int x,y,z;
char a,b,c;
unsigned char f;

void main()
{
    TMOD = 0x20;
    TH1 = TL1=0xfd;
    SCON = 0x50;
    TR1 = 1;
    lcd_init();
    cmd(0x80);
	show("***WELCOME TO***");
	cmd(0xc0);
	show("***GPS SYSTEM***");
	 delay1(500);
	 cmd(0x01);
	 cmd(0x80);
	 show("WAITING FOR");
	 cmd(0xc0);
	show("GPS CONNECTION");
	 delay1(1000);

    while(1)

{
AGAIN:
loop: 
	while(RI==0); 
		RI=0;
		if(SBUF!='$')
		{
		goto loop;
		}
		for(f=0;f<=5;f++)
		 {
                namegps[f]=rx();
            }
            checkgps=strcmp(namegps,name1gps);
		   if(checkgps==0) 
		   {
                for(f=0;f<=62;f++)
				{
                    gpsdat[f]=rx();     
                }
				}
				if(gpsdat[10]=='A')
				{
				cmd(0x01);
				cmd(0x80);
				show("GPS CONNECTED");
				cmd(0xc0);
				show("****************");
				delay1(200);
				}
				else
				{
				goto AGAIN; 
				}
				cmd(0x01);
				cmd(0x80);
				show("LAT:");
				cmd(0x84);
                for(h=12;h<14;h++)
				 {
                    dat(gpsdat[h]);
                }
                dat(223);
                for(h=14;h<=15;h++) {
                    dat(gpsdat[h]);
                }
				dat(39);
                for(h=17;h<=18;h++) {
                    dat(gpsdat[h]);
                }
				dat(34);
                dat('N');
				cmd(0xc0);
				show("LON:");
                cmd(0xc4);
                for(h=26;h<28;h++) {
                    dat(gpsdat[h]);
                }
                dat(223);
                for(h=28;h<30;h++) {
                    dat(gpsdat[h]);
                }
				dat(39);
                for(h=31;h<=32;h++) {
                    dat(gpsdat[h]);
                }
				dat(34);
                dat('E');
			   delay1(2000);
			   cmd(0x01);
			   cmd(0x80);
			   show("      DATE      ");
			   cmd(0xc4);
			   for(h=46;h<=47;h++)
			   {
			   dat(gpsdat[h]);
			   }
			   	dat('/');
				for(h=48;h<=49;h++)
			   {
			   dat(gpsdat[h]);
			   }
			   	dat('/');
				for(h=50;h<=51;h++)
			   {
			   dat(gpsdat[h]);
			   }
				delay1(1000);
				cmd(0x01);
			   cmd(0x80);
			   show("      TIME      ");
			    x = gpsdat[2]-48;
				y=gpsdat[1]-48;
				z=gpsdat[0]-48;
				x=x+3;
				if(x>=6)
				{
				 	x=x-6;
					y=y+1;
				}
				y=y+5;

				if(y<10)
				{

				}
				if(y>=10)
				{
				 	y=y%10;
					z=z+1;
				}
				if(z==2 & y>4)
				{
				  y=y-4;
				  z=0;
				}
				if(z==1 & y>2 )
				{
				 z=0;
				 y=y-2;
				}
				if(z==2 & y>=0)
				{
				 if(y==0)
				 {
				  z=0;
				  y=8;
				 }
				 else if(y==1)
				 {
				  z=0;
				  y=9;
				 }
				 else if(y==2)
				 {
				  z=1;
				  y=0;
				 }
				 else if(y==3)
				 {
				  z=1;
				  y=1;
				 }
				 else if(y==4)
				 {
				  z=0;
				  y=0;
				 }
				}
				a = x+48;
				b = y+48;
				c = z+48;
				

				cmd(0xc6);
				dat(c);
				dat(b);
				dat(':') ;
				dat(a);
				dat(gpsdat[3]);
				delay1(2000);
				}
}


unsigned char rx()
{
    while(RI==0);
    RI=0;
    return SBUF;
}

void lcd_init()
{
    cmd(0x38);
    cmd(0x0e);
    cmd(0x01);
    cmd(0x06);
    cmd(0x0c);
    cmd(0x80);
}
 
void cmd(unsigned char a)
{
    lcd_data=a;
    rs=0;
    rw=0;
    en=1;
    lcd_delay();
    en=0;
}
 
void dat(unsigned char b)
{
    lcd_data=b;
    rs=1;
    rw=0;
    en=1;
    lcd_delay();
    en=0;
}
 
void show(unsigned char *s)
{
    while(*s) {
        dat(*s++);
    }
}
void delay1(unsigned int time)
{
unsigned int i;
 unsigned int j;
 for(i=0;i<time;i++)
 for(j=0;j<1275;j++);
}
void lcd_delay()
{
    unsigned int lcd_delay;
    for(lcd_delay=0;lcd_delay<=6000;lcd_delay++);
}